{% extends '@EasyAdmin/crud/index.html.twig' %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('js/filters-handler.js') }}"></script>
{% endblock %}

{% block content %}
    <div class="d-flex flex-column" style="margin-top:20px; overflow-y: auto;">
        <div class="d-flex justify-content-between align-items-end flex-wrap">
            <!-- Filtros a la izquierda -->
            <form method="POST" id="filter-form" class="d-flex flex-wrap gap-4 align-items-end">
                <!-- Empresa -->
                <div class="form-group">
                    <label for="company-select" class="form-label">Empresa</label>
                        <select name="company_id" id="company-select" onchange="this.form.submit()" class="form-select" style="width: 250px;">
                            {% for company in companies %}
                                <option value="{{ company.id }}" {% if selectedCompany and selectedCompany.id == company.id %} selected {% endif %}>
                                    {{ company.comercialName }}
                                </option>
                            {% endfor %}
                        </select>
                </div>

                {% if selectedOffice is not null %}
                    <div class="form-group">
                    <label for="office-select" class="form-label">Centro</label>
                    <select id="office-select" class="form-select me-3" style="width: 230px;">
                        <option value="all" {% if selectedOffice == 'all' %} selected {% endif %}>Todos</option>
                        {% for office in offices %}
                            <option value="{{ office.id }}"
                                {% if selectedOffice != 'all' and selectedOffice.id == office.id %} selected {% endif %}>
                                {{ office.name }}
                            </option>
                        {% endfor %}
                    </select>
                </div>
                {% endif %}


                <!-- Usuario -->
                <div class="form-group">
                    <label for="user-select" class="form-label">Usuario</label>
                    <select id="user-select" class="form-select me-3" style="width: 230px;">
                        <option value="all" {% if selectedUser == 'all' %} selected {% endif %}>Todos</option>
                        {% for user in users %}
                            <option value="{{ user.id }}"
                                {% if selectedUser != 'all' and selectedUser.id == user.id %} selected {% endif %}>
                                {{ user.name }}
                            </option>
                        {% endfor %}
                    </select>
                </div>

                <div class="d-flex align-items-center me-3">
                    <div class="form-group">
                        <label for="startDate" class="form-label">Fecha inicio</label>
                        <input type="date" id="startDate" name="startDate"
                            class="form-control"
                            value="{{ startDate|date('Y-m-d') }}">
                    </div>
                </div>

                <div class="d-flex align-items-center me-3">
                    <div class="form-group">
                        <label for="endDate" class="form-label">Fecha fin</label>
                        <input type="date" id="endDate" name="endDate"
                            class="form-control"
                            value="{{ endDate|date('Y-m-d') }}">
                    </div>
                </div>
            </form>
            <div>
                {% if 'ROLE_ADMINISTRATIVE' not in app.user.roles %}
                <button type="button" id="export-button" class="btn btn-primary mb-4" style="height: 40px;">
                    Exportar
                </button>
                {% endif %}
            </div>
        </div>
        <div class="table-responsive" style="max-height: 80vh; overflow-y: auto;">
            {{ parent() }}
        </div>
    </div>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const exportButton = document.getElementById("export-button");

            exportButton.addEventListener("click", async function () {
                try {
                    // Obtener los parámetros de la URL
                    const urlParams = new URLSearchParams(window.location.search);
                    const com = urlParams.get('com');
                    const off = urlParams.get('off');
                    const us = urlParams.get('us');
                    const start = urlParams.get('start'); // Mes actual si no se pasa
                    const end = urlParams.get('end'); // Año actual si no se pasa

                    // Crear la URL con los parámetros adicionales
                    const exportUrl = `{{ path('export_report') }}?com=${com}&off=${off}&us=${us}&start=${start}&end=${end}`;

                    const response = await fetch(exportUrl, {
                        method: "POST",
                        headers: { "Content-Type": "application/json" }
                    });

                    const data = await response.json();

                    if (data.success && Array.isArray(data.files)) {
                        for (const file of data.files) {
                            // Crear y hacer clic en el enlace para descargar
                            const link = document.createElement("a");
                            link.href = file.file_path;
                            link.download = file.file_name;
                            document.body.appendChild(link);
                            link.click();
                            document.body.removeChild(link);

                            // Llamar a la API para eliminar el archivo después de descargarlo
                            await fetch("{{ path('delete_exported_file') }}", {
                                method: "POST",
                                body: JSON.stringify({ filePath: file.file_path }),
                                headers: { "Content-Type": "application/json" }
                            });
                        }
                    } else {
                        alert("Error al generar el archivo: " + (data.message || "Desconocido"));
                    }
                } catch (error) {
                    console.error("Error:", error);
                    alert("Hubo un problema con la solicitud de exportación.");
                }
            });
        });
        </script>



{% endblock %}
